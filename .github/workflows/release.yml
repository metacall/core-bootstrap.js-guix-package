name: Release

on:
  push:
    tags:
    - 'v*.*.*'

env:
  GHR_VERSION: 0.12.0
  ARTIFACTS_PATH: ./build-artifacts
  # GITHUB_TOKEN      - From default secrets
  # GITHUB_REPOSITORY - Default variable

jobs:
  build:
    name: Build Bootstrap.js package
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Build the package
        run: sh ./build.sh
      - name: Load GHR binary
        run: |
          curl -sL https://github.com/tcnksm/ghr/releases/download/v${GHR_VERSION}/ghr_v${GHR_VERSION}_linux_amd64.tar.gz | tar zx
          chmod +x ghr_v${GHR_VERSION}_linux_amd64/ghr
          mv ghr_v${GHR_VERSION}_linux_amd64/ghr /usr/local/bin
      - name: Export GHR variables
        run: |
          echo "GH_REPO_OWNER=${GITHUB_REPOSITORY_OWNER}" >> $GITHUB_ENV
          echo "GH_REPO_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
          export PREVIOUS_TAG=$(git describe HEAD^1 --abbrev=0 --tags)
          echo "PREVIOUS_TAG=${PREVIOUS_TAG}" >> $GITHUB_ENV
          echo "GIT_HISTORY<<EOF" >> $GITHUB_ENV
          echo "$(git log --no-merges --format="- %s" ${PREVIOUS_TAG}..HEAD)" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Release on GitHub
        run: |
          if [[ "${PREVIOUS_TAG}" == "" ]];  then export GIT_HISTORY=$(git log --no-merges --format="- %s"); fi
          export CI_COMMIT_TAG="${{ github.ref_name }}"
          export RELEASE_DATE=$(date '+%Y-%m-%d')
          echo "MetaCall Bootstrap.js Guix Package ${CI_COMMIT_TAG} [${RELEASE_DATE}]"
          ghr -t "${{ secrets.GITHUB_TOKEN }}" -u "${GH_REPO_OWNER}" -r "${GH_REPO_NAME}" -c "${GITHUB_SHA}" -n "MetaCall Bootstrap.js Guix Package ${CI_COMMIT_TAG} [${RELEASE_DATE}]" -b "${GIT_HISTORY}" -replace "${CI_COMMIT_TAG}" "${PWD}/espree-$(cat VERSION).tgz"
